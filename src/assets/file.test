create or replace PROCEDURE MDM_CP_PUSH_PAYMENT_INFO IS
    V_CHECK_EXIST   NUMBER;
    V_LAST_UPD_DATE DATE;
BEGIN
  SELECT MDM_CP_PAYMENT_LAST_UPD_DATE
  INTO V_LAST_UPD_DATE
  FROM BUDU_CUSTOMERS
  WHERE PK = 10000;

  FOR I IN
  (
        SELECT PTM.PK                  as PAYMENT_TRX_MASTER,
    PTM.MDM_METERS          as MDM_METERS,
    PTM.REQ_TRX_MASTER      as REQ_TRX_MASTER,
    PTM.TRX_NO              as TRX_NO,
    PTM.TRX_DATE            as TRX_DATE,
    PTM.CASH_VALUE          as CASH_VALUE,
    PTM.CREDIT_CARD_VALUE   as CREDIT_CARD_VALUE,
    PTM.BANK_TRANSFER_VALUE as BANK_TRANSFER_VALUE,
    PTM.CHECKS_TOTAL_VALUE  as CHECKS_TOTAL_VALUE,
    PTM.MDM_ON_ACCOUNT      as MDM_ON_ACCOUNT,
    PTM.STATUS              as STATUS

  FROM PAYMENTS_TRX_MASTER PTM
  WHERE PTM.CP_MODIFYING_DATE is not null
        )
  LOOP
  SELECT COUNT(1)
  INTO V_CHECK_EXIST
  FROM MDM_CP_PAYMENT_TRX_MASTER
  WHERE PAYMENT_TRX_MASTER = I.PAYMENT_TRX_MASTER;

  IF
                V_CHECK_EXIST = 0
            THEN
  INSERT INTO MDM_CP_PAYMENT_TRX_MASTER
    (PK, PAYMENT_TRX_MASTER, REQ_TRX_MASTER, MDM_METERS, TRX_NO,
    TRX_DATE, CASH_VALUE, CREDIT_CARD_VALUE, BANK_TRANSFER_VALUE,
    CHECKS_TOTAL_VALUE, MDM_ON_ACCOUNT, STATUS)
  VALUES
    (MDM_CP_PAYMENT_TRX_MASTER_SEQ.nextval, I.PAYMENT_TRX_MASTER, I.REQ_TRX_MASTER, I.MDM_METERS,
      I.TRX_NO, I.TRX_DATE, I.CASH_VALUE, I.CREDIT_CARD_VALUE, I.BANK_TRANSFER_VALUE,
      I.CHECKS_TOTAL_VALUE, I.MDM_ON_ACCOUNT, I.STATUS);
  else
  update MDM_CP_PAYMENT_TRX_MASTER
                SET PK                  = I.PAYMENT_TRX_MASTER,
                    PAYMENT_TRX_MASTER  = I.PAYMENT_TRX_MASTER,
                    REQ_TRX_MASTER      = I.REQ_TRX_MASTER,
                    MDM_METERS          = I.MDM_METERS,
                    TRX_NO              = I.TRX_NO,
                    TRX_DATE            = I.TRX_DATE,
                    CASH_VALUE          = I.CASH_VALUE,
                    CREDIT_CARD_VALUE   = I.CREDIT_CARD_VALUE,
                    BANK_TRANSFER_VALUE = I.BANK_TRANSFER_VALUE,
                    CHECKS_TOTAL_VALUE  = I.CHECKS_TOTAL_VALUE,
                    MDM_ON_ACCOUNT      = I.MDM_ON_ACCOUNT,
                    STATUS              = I.STATUS
                WHERE PAYMENT_TRX_MASTER = I.PAYMENT_TRX_MASTER;

END
IF;

            UPDATE PAYMENTS_TRX_MASTER
            SET CP_MODIFYING_DATE = NULL
            WHERE PK = I.PAYMENT_TRX_MASTER;

UPDATE BUDU_CUSTOMERS
            SET MDM_CP_PAYMENT_LAST_UPD_DATE = SYSDATE
            WHERE PK = 10000;

COMMIT;
END LOOP;
END;
/
----------------------------------------
alter table TMG.BUDU_CUSTOMERS
    ADD
(
        MDM_CP_PAYMENT_LAST_UPD_DATE DATE,
        MDM_CP_READING_LAST_UPD_DATE DATE
        );
/
alter table MDM.BUDU_CUSTOMERS
    ADD
(
        MDM_CP_PAYMENT_LAST_UPD_DATE DATE,
        MDM_CP_READING_LAST_UPD_DATE DATE
        );
----------------------------
alter table MDM.PAYMENTS_TRX_MASTER
    ADD
(
        CP_MODIFYING_DATE DATE NULL
        )
/
alter table TMG.PAYMENTS_TRX_MASTER
    ADD
(
        CP_MODIFYING_DATE DATE NULL
        )
/
-------------------------------------------
update PAYMENTS_TRX_MASTER
set CP_MODIFYING_DATE=SYSDATE;
------------------------------------------------
CREATE SEQUENCE MDM_CP_PAYMENT_TRX_MASTER_SEQ
    START WITH 1
    CACHE 20;
/
CREATE OR REPLACE PROCEDURE MDM_CP_PUSH_READINGS_INFO IS
    V_CHECK_EXIST   NUMBER;
    V_LAST_UPD_DATE DATE;
BEGIN
  SELECT MDM_CP_READING_LAST_UPD_DATE
  INTO V_LAST_UPD_DATE
  FROM BUDU_CUSTOMERS
  WHERE PK = 10000;
  FOR I IN
  (
        SELECT MRBM.PK                       MDM_READINGS_BY_MONTH,
    REQ.PK                        REQ_TRX_MASTER,
    MRBM.MDM_METERS,
    NVL(MRBM.READING, 0)          READING,
    MBC.NAME                      MDM_BILLING_CYCLE_NAME,
    NVL(MRBM.EST_TARIFF_VALUE, 0) EST_TARIFF_VALUE
  FROM MDM_READINGS_BY_MONTH MRBM
    INNER JOIN MDM_METERS M ON M.PK = MRBM.MDM_METERS
    INNER JOIN REQ_TRX_MASTER REQ ON REQ.PK = MRBM.REQ_TRX_MASTER
    INNER JOIN MDM_BILLING_CYCLE MBC ON MBC.PK = MRBM.MDM_BILLING_CYCLE
  WHERE MRBM.CP_MODIFYING_DATE is not null
        )
  LOOP
  SELECT COUNT(1)
  INTO V_CHECK_EXIST
  FROM MDM_CP_READINGS_BY_MONTH
  WHERE PK = I.MDM_READINGS_BY_MONTH;
  IF V_CHECK_EXIST = 0
            THEN
  INSERT INTO MDM_CP_READINGS_BY_MONTH
    (PK, REQ_TRX_MASTER, MDM_METERS, MDM_READINGS_BY_MONTH,
    MDM_BILLING_CYCLE_NAME, READING, EST_TARIFF_VALUE)
  VALUES
    (MDM_CP_READINGS_BY_MONTH_SEQ.nextval, I.REQ_TRX_MASTER, I.MDM_METERS, I.MDM_READINGS_BY_MONTH,
      I.MDM_BILLING_CYCLE_NAME, I.READING, I.EST_TARIFF_VALUE);
  else
  update MDM_CP_READINGS_BY_MONTH
                set PK=I.MDM_READINGS_BY_MONTH,
                    REQ_TRX_MASTER=I.REQ_TRX_MASTER,
                    MDM_METERS=I.MDM_METERS,
                    MDM_READINGS_BY_MONTH=I.MDM_READINGS_BY_MONTH,
                    MDM_BILLING_CYCLE_NAME=I.MDM_BILLING_CYCLE_NAME,
                    READING=I.READING,
                    EST_TARIFF_VALUE=I.EST_TARIFF_VALUE
                WHERE PK = I.MDM_READINGS_BY_MONTH;
END
IF;

            UPDATE MDM_READINGS_BY_MONTH
            SET CP_MODIFYING_DATE = NULL
            WHERE PK = I.MDM_READINGS_BY_MONTH;

UPDATE BUDU_CUSTOMERS
            SET MDM_CP_READING_LAST_UPD_DATE = SYSDATE
            WHERE PK = 10000;
COMMIT;

END LOOP;

END;
/
-------------------------------------------
alter table
    MDM.MDM_READINGS_BY_MONTH
    ADD
(
        CP_MODIFYING_DATE DATE NULL
        )
/
alter table
    TMG.MDM_READINGS_BY_MONTH
    ADD
(
        CP_MODIFYING_DATE DATE NULL
        )
/
update  TMG.MDM_READINGS_BY_MONTH set CP_MODIFYING_DATE=SYSDATE;
update  MDM.MDM_READINGS_BY_MONTH set CP_MODIFYING_DATE=SYSDATE;
/
select CP_MODIFYING_DATE
from MDM_READINGS_BY_MONTH;
/
CREATE SEQUENCE MDM_CP_READINGS_BY_MONTH_SEQ
    START WITH     1
    CACHE 20;
/
